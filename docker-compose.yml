version: '3.7'
services:
  backend:
    build: ./backend
    ports:
      - "1323:${NEXT_PUBLIC_BACKEND_PORT}" # Exposes the backend's port 1323 to the host
    environment: # Environment variables are passed to the container
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - SLACK_AUTH_TOKEN=${SLACK_AUTH_TOKEN}
      - SLACK_PUBLIC_CHANNEL_ID=${SLACK_PUBLIC_CHANNEL_ID}
      - SLACK_PRIVATE_CHANNEL_ID=${SLACK_PRIVATE_CHANNEL_ID}
      - SLACK_ADMIN_CHANNEL_ID=${SLACK_ADMIN_CHANNEL_ID}
    depends_on:
      - redis # Ensures Redis service is started before the backend
    restart: unless-stopped # Optional: Restarts the service unless it was stopped by the user

  frontend:
    build: 
      context: ./frontend
      args: # Passes environment variables to the frontend's build process
        - NEXT_PUBLIC_BACKEND_HOST=${NEXT_PUBLIC_BACKEND_HOST} 
        - NEXT_PUBLIC_BACKEND_PORT=${NEXT_PUBLIC_BACKEND_PORT}
    ports:
      - "3000:3000" # Exposes the frontend's port 3000 to the host
    depends_on:
      - backend # Optional: Ensures backend service is started before the frontend
    restart: unless-stopped # Optional: Restarts the service unless it was stopped by the user

  redis:
    image: "redis:alpine" # Uses the official Redis image
    ports:
      - "6379:6379" # Exposes the Redis port 6379 to the host